#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>

set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

steptxt="----->"

start() {
    echo "$steptxt $@... "
}

finished() {
    echo "done"
}

mkdir -p "$BUILD_DIR" "$CACHE_DIR"

echo "v0.0.5"
echo "BUILD_DIR: $BUILD_DIR"
echo "CACHE_DIR: $CACHE_DIR"
echo "ENV_DIR: $ENV_DIR"
echo "HOME: $HOME"

if [ ! -d "$CACHE_DIR/.bun" ]; then
    start "Installing Bun"
    curl -fsSL https://bun.sh/install | bash
    finished
    mkdir -p "$CACHE_DIR/.bun"
    cp -R "$HOME/.bun" "$CACHE_DIR/.bun"
else
    start "Using cached Bun"
    cp -R "$CACHE_DIR/.bun" "$HOME/.bun"
    finished
fi

export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

echo_export_env_vars() {
  echo "export BUN_INSTALL=\$HOME/.bun"
  echo "export PATH=\$BUN_INSTALL/bin:\$PATH"
}

write_profile_d_script() {
  start "Creating .profile.d with env vars"
    mkdir -p "$BUILD_DIR/.profile.d"
    local profile_path="$BUILD_DIR/.profile.d/bun_buildpack_paths.sh"

    echo_export_env_vars > "$profile_path"
    chmod +x "$profile_path"
  finished
}

write_profile_d_script

# Build the project
cd "$BUILD_DIR"

start "Installing Dependencies"
  bun install
finished

start "Building the app"
  bun run -b build
finished
