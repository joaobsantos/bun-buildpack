#!/usr/bin/env bash
# Release script for Nx Monorepo Buildpack
# Defines the web process for Heroku

BUILD_DIR=${1:-.}
ENV_DIR=${3:-}

# Export environment variables from Heroku
export_env_dir() {
  if [ -d "$1" ]; then
    for e in $(ls $1); do
      case $e in
        PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH) ;;
        *) export "$e=$(cat $1/$e)" ;;
      esac
    done
  fi
}

export_env_dir $ENV_DIR

# Configuration - no defaults, require explicit values
BP_BUILD=${BP_BUILD}
BP_START=${BP_START}

# Validate required environment variables
if [ -z "$BP_BUILD" ] || [ -z "$BP_START" ]; then
  echo "ERROR: Missing required environment variables"
  echo "Please set: heroku config:set BP_BUILD=@newsoftds/your-project BP_START='bun ./index.js'"
  exit 1
fi

# Try to find the built project directory
DIST_PATH=""
for possible_path in \
  "dist/apis/servers/${BP_BUILD#@newsoftds/}" \
  "dist/${BP_BUILD#@newsoftds/}" \
  "dist/$(echo $BP_BUILD | sed 's/@[^/]*\///')" \
  "apps/${BP_BUILD#@newsoftds/}/dist" \
  "web/packages/${BP_BUILD#@newsoftds/}/dist"
do
  if [ -d "$possible_path" ] && [ -f "$possible_path/package.json" ]; then
    DIST_PATH="$possible_path"
    break
  fi
done

# Smart start command handling
if [[ "$BP_START" == *"cd "* ]]; then
  # User provided full command with cd, use as-is
  START_COMMAND="$BP_START"
else
  # User provided just the command, prepend cd to dist path
  START_COMMAND="cd $DIST_PATH && $BP_START"
fi

# Generate the release configuration
if [ "$BP_NODE" = "true" ]; then
  cat << EOF
---
config_vars:
  BUN_DIR: /app/.heroku/cache
  PATH: /app/.heroku/node/bin:/app/.heroku/bin:\$PATH
default_process_types:
  web: $START_COMMAND
EOF
else
  cat << EOF
---
config_vars:
  BUN_DIR: /app/.heroku/cache
  PATH: /app/.heroku/bin:\$PATH
default_process_types:
  web: $START_COMMAND
EOF
fi